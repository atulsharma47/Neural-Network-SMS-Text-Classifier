import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score

# Load the dataset
train_data = pd.read_csv('path_to_train_data.csv')
test_data = pd.read_csv('path_to_test_data.csv')

# Preprocess the data
vectorizer = CountVectorizer()
X_train = vectorizer.fit_transform(train_data['message'])
y_train = train_data['label']
X_test = vectorizer.transform(test_data['message'])
y_test = test_data['label']

# Train the model
model = MultinomialNB()
model.fit(X_train, y_train)

# Define the predict_message function
def predict_message(message):
    transformed_message = vectorizer.transform([message])
    prediction = model.predict(transformed_message)[0]
    prediction_prob = model.predict_proba(transformed_message)[0][1]
    if prediction == 'spam':
        return [prediction_prob, 'spam']
    else:
        return [1 - prediction_prob, 'ham']

# Evaluate the model
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy}')

# Test the predict_message function
test_messages = ["Free entry in 2 a wkly comp to win FA Cup final tkts 21st May 2005. Text FA to 87121 to receive entry question(std txt rate)T&C's apply 08452810075over18's",
                 "Nah I don't think he goes to usf, he lives around here though"]

for msg in test_messages:
    print(predict_message(msg))
